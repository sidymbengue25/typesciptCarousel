var CarouselMaker = (function () {function CarouselMaker(element, options) {if (options === void 0) { options = {}; } var _this = this; this.currentItem = 0; this.gotoSlide = function (index) {if (index < 0) {index = _this.nbrSlide - _this.options.nbrItemVisible; } else if (index >= _this.nbrSlide || (_this.containerChildren[_this.currentItem + _this.options.nbrItemVisible] === undefined) && index > _this.currentItem) {index = 0; } _this.currentItem = index; if (_this.options.loop == false) {return; } (index === 0) ? _this.hideElement(_this.prevButton) : _this.showElement(_this.prevButton); (_this.containerChildren[_this.currentItem + _this.options.nbrItemVisible] == undefined) ? _this.hideElement(_this.nextButton) : _this.showElement(_this.nextButton); var translateX = index * (-100 / _this.nbrSlide); _this.container.style.transform = 'translate3d(' + translateX + '%,0,0)'; }; this.prev = function () {_this.gotoSlide(_this.currentItem - _this.options.nbrElemtToSlide); }; this.next = function () {_this.gotoSlide(_this.currentItem + _this.options.nbrElemtToSlide); }; this.play = function () {_this.stop(); _this.timer = setInterval(_this.next, _this.options.interval); }; this.root = element; this.options = Object.assign({}, {nbrItemVisible: 3, nbrElemtToSlide: 1, loop: true, interval: 5000 }, options); } CarouselMaker.prototype.init = function () {var _this = this; this.container = this.root.firstElementChild; this.containerChildren = [].slice.call(this.container.children); this.nbrSlide = this.containerChildren.length; this.ratio = this.nbrSlide / this.options.nbrItemVisible; var itemWidth = 100 * (this.options.nbrItemVisible / this.ratio); var childEq = (100 / this.options.nbrItemVisible) / this.ratio; /** Style Initiation  */ this.setWidth(this.container, this.ratio * 100); this.containerChildren.map(function (child) {_this.setWidth(child, childEq); }); /** Control buttons */ this.prevButton = this.htmlElementCreator('button', this.root, "prevButton", "navCarrousel"); this.prevButton.innerText = "Prev"; this.nextButton = this.htmlElementCreator('button', this.root, "nextButton", "navCarrousel"); this.nextButton.innerText = "Next"; /** EventListener on navigation Click */ this.prevButton.addEventListener('click', function () {_this.prev(); _this.play(); }, false); this.nextButton.addEventListener('click', function () {_this.next(); _this.play(); }, false); if (this.options.loop === true) {this.prevButton.classList.add('hidden'); } this.play(); }; CarouselMaker.prototype.setWidth = function (elem, equation) {elem.style.width = equation + "%"; }; CarouselMaker.prototype.htmlElementCreator = function (elementType, container, id, className) {var element = document.createElement(elementType); element.setAttribute("id", id); element.setAttribute("class", className); container.appendChild(element); return element; }; CarouselMaker.prototype.hideElement = function (element) {if (element.classList.contains('hidden')) return; element.classList.add('hidden'); }; CarouselMaker.prototype.showElement = function (element) {if (element.classList.contains('hidden') === false) return; element.classList.remove('hidden'); }; CarouselMaker.prototype.stop = function () {window.clearInterval(this.timer); }; return CarouselMaker; }()); document.addEventListener('DOMContentLoaded', function () {var carrouselToSet = document.querySelector('#carrousel'); var myCarrousel = new CarouselMaker(carrouselToSet, {nbrItemVisible: 3, nbrElemtToSlide: 1, loop: true, interval: 5000 }); myCarrousel.init(); }); //# sourceMappingURL=carousel.js.map
